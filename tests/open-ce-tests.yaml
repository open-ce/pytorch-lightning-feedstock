tests:
  - name: Setup PyTorch-Lightning Tests
    command: |
        PL_VERSION=$(python -c "import pytorch_lightning; print(pytorch_lightning.__version__)")
        PL_COMMIT=${PL_VERSION#*+}
        conda install -y git
        git clone https://github.com/PyTorchLightning/pytorch-lightning.git
        cd pytorch-lightning
        git checkout ${PL_COMMIT}
        git apply $FEEDSTOCK_DIR/lightning/0301-fix-tests.patch
        conda install -y scikit-learn>=0.22.2 numba=0.52 regex typed-ast pandas scikit-image coverage cryptography
        pip install -r requirements/test.txt
        pip install sklearn omegaconf rich
  - name: Run PyTorch-Lightning tests
    command: |
        cd pytorch-lightning
        SKIPPED_TESTS=(
                     "not test_gpu_stats_monitor_cpu_machine and"
                     "not test_cli and"
                     "not test_batch_size_smaller_than_num_gpus and"
                     "not test_result_obj_predictions and"
                     "not test_sync_batchnorm_ddp and"
                     "not test_file_logger_log_hyperparams and"
                     "not test_resume_legacy_checkpoints and"
                     "not test_multi_cpu_model_ddp and"
                     "not test_eval_logging_auto_reduce and"
                     "not test_metric_collection_wrong_input and"
                     "not test_batch_size_smaller_than_num_gpus and"
                     "not test_models"
        )
        TESTSUITES_TO_SKIP=(
                      tests/models/test_horovod.py
                      tests/models/test_onnx.py
                      tests/checkpointing/test_legacy_checkpoints.py
                      tests/helpers/datasets.py
                      tests/helpers/test_datasets.py
                      tests/trainer/test_dataloaders.py
                      tests/trainer/test_trainer.py
                      tests/trainer/test_trainer_tricks.py
                      tests/trainer/optimization/test_backward_calls.py
                      tests/tuner/test_lr_finder.py
                      tests/tuner/test_scale_batch_size.py
        )

        for skipped_test in "${TESTSUITES_TO_SKIP[@]}"
        do
           SKIPPED_TEST_SUITES+="--ignore $skipped_test "
        done

        pytest -k "${SKIPPED_TESTS[*]}" ${SKIPPED_TEST_SUITES} -v tests/
  - name: Clean tests
    command: rm -rf pytorch-lightning
  - name: Setup torchmetrics Tests
    command: |
        METRICS_VERSION=$(python -c "import torchmetrics; print(torchmetrics.__version__)")
        METRICS_VERSION=${METRICS_VERSION#*+}
        conda install -y git
        git clone https://github.com/PyTorchLightning/torchmetrics.git
        cd torchmetrics
        git checkout v${METRICS_VERSION}
        git apply ${FEEDSTOCK_DIR}/metrics/0311-fix-tests.patch
        ARCH=$(arch)
        if test "${ARCH}" == "x86_64"
        then
            ARCH="64"
        fi
        conda install -y scikit-learn>=0.22.2 numba=0.52 regex typed-ast scikit-image nltk gcc_linux-${ARCH} coverage cryptography pandas
        pip install -r requirements/test.txt
  - name: Run torchmetrics tests
    command: |
        cd torchmetrics
        TESTSUITES_TO_SKIP=(
                      tests/audio/test_si_sdr.py
                      tests/audio/test_si_snr.py
                      tests/audio/test_pesq.py
                      tests/text/test_cer.py
        )

        for skipped_test in "${TESTSUITES_TO_SKIP[@]}"
        do
           SKIPPED_TEST_SUITES+="--ignore $skipped_test "
        done

        pytest ${SKIPPED_TEST_SUITES} -v tests/
  - name: Clean tests
    command: rm -rf torchmetrics
