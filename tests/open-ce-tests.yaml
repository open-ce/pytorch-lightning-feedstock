tests:
tests:
  - name: Setup PyTorch-Lightning Tests
    command: |
        PL_VERSION=$(python -c "import pytorch_lightning; print(pytorch_lightning.__version__)")
        PL_COMMIT=${PL_VERSION#*+}
        conda install -y git
        git clone https://github.com/PyTorchLightning/pytorch-lightning.git
        cd pytorch-lightning
        git checkout ${PL_COMMIT}
        conda install -y "scikit-learn>=0.22.2, <1.1.3" regex typed-ast pandas=1.4 scikit-image coverage cryptography psutil
        pip install -r requirements/pytorch/test.txt
        pip install sklearn omegaconf rich jsonargparse docstring-parser
        pip install -U 'jsonargparse[signatures]'
        python .actions/assistant.py copy_replace_imports --source_dir="./tests" \
          --source_import="lightning.fabric,lightning.pytorch"  --target_import="lightning_fabric,pytorch_lightning"
  - name: Run PyTorch-Lightning tests
    command: |
        cd pytorch-lightning
        TESTSUITES_TO_RUN=(
                      tests/tests_pytorch/test_cli.py
                      tests/tests_pytorch/accelerators
                      tests/tests_pytorch/trainer/test_trainer.py
                      tests/tests_pytorch/strategies/test_ddp.py
        )
        for test_suite in "${TESTSUITES_TO_RUN[@]}"
        do
           TEST_SUITES+="$test_suite "
        done
        pytest -v ${TEST_SUITES}
  - name: Clean tests
    command: rm -rf pytorch-lightning
  - name: Setup torchmetrics Tests
    command: |
        METRICS_VERSION=$(python -c "import torchmetrics; print(torchmetrics.__version__)")
        METRICS_VERSION=${METRICS_VERSION#*+}
        conda install -y git
        git clone https://github.com/PyTorchLightning/torchmetrics.git
        cd torchmetrics
        git checkout v${METRICS_VERSION}
        ARCH=$(arch)
        if test "${ARCH}" == "x86_64"
        then
            ARCH="64"
        fi
        conda install -y scikit-learn>=0.22.2 regex typed-ast scikit-image nltk gcc_linux-${ARCH} coverage cryptography pandas
        pip install -r requirements/test.txt
        pip install torch-fidelity pycocotools
        cd tests
        python -c "from urllib.request import urlretrieve ; urlretrieve('https://pl-public-data.s3.amazonaws.com/metrics/data.zip', 'data.zip')"
        unzip -o data.zip
        ls -l _data/*
  - name: Run torchmetrics tests
    command: |
        cd torchmetrics
        TESTSUITES_TO_RUN=(
                      tests/unittests/bases/test_aggregation.py
                      tests/unittests/classification/test_accuracy.py
                      tests/unittests/detection/test_map.py
                      tests/unittests/regression/test_r2.py
                      tests/unittests/retrieval/test_ndcg.py
        )
        for test_suite in "${TESTSUITES_TO_RUN[@]}"
        do
          TEST_SUITES+="${test_suite} "
        done

        pytest -v ${TEST_SUITES}
  - name: Clean tests
    command: rm -rf torchmetrics
